{
  "scope": "source.pike - variable.other.pike",
  "completions":
  [
    "pike",
    {"trigger":"Protocols.HTTP.Query","contents":"Protocols.HTTP.Query"},
    {"trigger":"Roxen.http_encode_url","contents":"Roxen.http_encode_url(${1:string url})"},
    {"trigger":"Stdio.exist","contents":"Stdio.exist(${1:string filename})"},
    {"trigger":"Stdio.read_file","contents":"Stdio.write_file(${1:string filename})"},
    {"trigger":"Stdio.write_file","contents":"Stdio.write_file(${1:string filename}, ${2:string content})"},
    {"trigger":"TRACE","contents":"TRACE(\"${1:format}\\n\", ${2:mixed ... args});"},
    {"trigger":"UNDEFINED","contents":"UNDEFINED"},
    {"trigger":"__AUTO_BIGNUM__","contents":"__AUTO_BIGNUM__"},
    {"trigger":"__BUILD__","contents":"__BUILD__"},
    {"trigger":"__DATE__","contents":"__DATE__"},
    {"trigger":"__DIR__","contents":"__DIR__"},
    {"trigger":"__FILE__","contents":"__FILE__"},
    {"trigger":"__LINE__","contents":"__LINE__"},
    {"trigger":"__MAJOR__","contents":"__MAJOR__"},
    {"trigger":"__MINOR__","contents":"__MINOR__"},
    {"trigger":"__NT__","contents":"__NT__"},
    {"trigger":"__PIKE__","contents":"__PIKE__"},
    {"trigger":"__REAL_BUILD__","contents":"__REAL_BUILD__"},
    {"trigger":"__REAL_MAJOR__","contents":"__REAL_MAJOR__"},
    {"trigger":"__REAL_MINOR__","contents":"__REAL_MINOR__"},
    {"trigger":"__REAL_VERSION__","contents":"__REAL_VERSION__"},
    {"trigger":"__TIME__","contents":"__TIME__"},
    {"trigger":"__VERSION__","contents":"__VERSION__"},
    {"trigger":"__amigaos__","contents":"__amigaos__"},
    {"trigger":"__func__","contents":"__func__"},
    {"trigger":"_sprintf","contents":"_sprintf(\"$1:format\", ${2:mixed arg})"},
    {"trigger":"abs","contents":"abs(${1:float|int|object arg})"},
    {"trigger":"access","contents":"access(${1:string path}, ${2:string|void mode})"},
    {"trigger":"acos","contents":"acos(${1:float arg})"},
    {"trigger":"acosh","contents":"acosh(${1:float arg})"},
    {"trigger":"add_constant","contents":"add_constant(${1:string name}, ${2:mixed value})"},
    {"trigger":"add_include_path","contents":"add_include_path(${1:string tmp})"},
    {"trigger":"add_module_path","contents":"add_module_path(${1:string tmp})"},
    {"trigger":"add_program_path","contents":"add_program_path(${1:string tmp})"},
    {"trigger":"aggregate","contents":"aggregate(${1:mixed ... elements})"},
    {"trigger":"aggregate_mapping","contents":"aggregate_mapping(${1:mixed ... elements})"},
    {"trigger":"aggregate_multiset","contents":"aggregate_multiset(${1:mixed ... elements})"},
    {"trigger":"alarm","contents":"alarm(${1:int seconds})"},
    {"trigger":"all_constants","contents":"all_constants()"},
    {"trigger":"all_threads","contents":"all_threads()"},
    {"trigger":"allocate","contents":"allocate(${1:int size}${2:, mixed init})"},
    {"trigger":"array_sscanf","contents":"array_sscanf(${1:string data}, ${2:string format})"},
    {"trigger":"arrayp","contents":"arrayp(${1:mixed ... arg})"},
    {"trigger":"asin","contents":"asin(${1:int|float f})"},
    {"trigger":"asinh","contents":"asinh(${1:int|float f})"},
    {"trigger":"atan","contents":"atan(${1:int|float f1}, ${2:int|float f2})"},
    {"trigger":"atan2","contents":"atan2(${1:int|float f1}, ${2:int|float f2})"},
    {"trigger":"atanh","contents":"atanh(${1:int|float f})"},
    {"trigger":"atexit","contents":"atexit(${1:function(:void) callback})"},
    {"trigger":"backtrace","contents":"backtrace()"},
    {"trigger":"basename","contents":"basename(${1:string path})"},
    {"trigger":"basetype","contents":"basetype(${1:mixed value})"},
    {"trigger":"bool","contents":"bool"},
    {"trigger":"call_function","contents":"call_function(${1:function(:void) fun}, ${2:mixed ... args})"},
    {"trigger":"call_out","contents":"call_out(${1:function f}, ${2:float|int delay}, ${3:void|mixed ... args});"},
    {"trigger":"call_out_info","contents":"call_out_info()"},
    {"trigger":"callablep","contents":"callablep(${1:mixed arg})"},
    {"trigger":"cd","contents":"cd(${1:string path})"},
    {"trigger":"ceil","contents":"ceil(${1:float f})"},
    {"trigger":"chmod","contents":"chmod(${1:string path}, ${2:int mode})"},
    {"trigger":"chown","contents":"chown"},
    {"trigger":"chroot","contents":"chroot"},
    {"trigger":"cleargroups","contents":"cleargroups"},
    {"trigger":"closelog","contents":"closelog"},
    {"trigger":"column","contents":"column(${1:array data}, ${2:mixed index})"},
    {"trigger":"combine_path","contents":"combine_path(${1:string path}, ${2:string ... paths})"},
    {"trigger":"combine_path_amigaos","contents":"combine_path_amigaos(${1:string path}, ${2:string ... paths})"},
    {"trigger":"combine_path_nt","contents":"combine_path_nt(${1:string path}, ${2:string ... paths})"},
    {"trigger":"combine_path_unix","contents":"combine_path_unix(${1:string path}, ${2:string ... paths})"},
    {"trigger":"compile","contents":"compile(${1:string source}, ${2:CompilationHandler|void handler}, ${3:int|void major}, ${4:int|void minor}, ${5:program|void target}, ${6:object|void placeholder})"},
    {"trigger":"compile_file","contents":"compile_file(${1:string filename}, ${2:object|void handler}, ${3:void|program p}, ${4:void|object o})"},
    {"trigger":"compile_string","contents":"compile_string(${1:string source}, ${2:void|string filename}, ${3:object|void handler}, ${4:void|program p}, ${5:void|object o}, ${6:void|int _show_if_constant_errors})"},
    {"trigger":"constant","contents":"constant ${1}"},
    {"trigger":"copy_value","contents":"copy_value(${1:mixed value})"},
    {"trigger":"cos","contents":"cos(${1:int|float f})"},
    {"trigger":"cosh","contents":"cosh(${1:int|float f})"},
    {"trigger":"cpp","contents":"cpp(${1:string data}, ${2:mapping|string|void current_file}, ${3:int|string|void charset}, ${4:object|void handler}, ${5:void|int compat_major}, ${6:void|int compat_minor}, ${7:void|int picky_cpp})"},
    {"trigger":"create","contents":"void create(${1:mixed ... arg})\n{\n\t${2:}\n}"},
    {"trigger":"crypt","contents":"crypt(${1:string password_or_typed_password}${2:, string crypted_password})"},
    {"trigger":"ctime","contents":"ctime(${1:int timestamp})"},
    {"trigger":"decode_value","contents":"decode_value(${1:string coded_value}${2:, void|Codec codec})"},
    {"trigger":"define","contents":"#define ${1:WHAT}"},
    {"trigger":"delay","contents":"delay(${1:int|float s})"},
    {"trigger":"describe_backtrace","contents":"describe_backtrace(${1:mixed trace}${2:, void|int linewidth})"},
    {"trigger":"describe_error","contents":"describe_error(${1:mixed err})"},
    {"trigger":"destruct","contents":"destruct(${1:void|object o})"},
    {"trigger":"destructedp","contents":"destructedp(${1:mixed arg})"},
    {"trigger":"dirname","contents":"dirname(${1:string path})"},
    {"trigger":"encode_value","contents":"encode_value(${1:mixed value}${2:, Codec|void codec})"},
    {"trigger":"encode_value_canonic","contents":"encode_value_canonic(${1:mixed value}${2:, Codec|void codec})"},
    {"trigger":"enumerate","contents":"enumerate(${1:int n}${2:, void|mixed step}${3:, void|mixed start}${4:, void|function(:void) operator})"},
    {"trigger":"equal","contents":"equal(${1:mixed a}, ${2:mixed b})"},
    {"trigger":"errno","contents":"errno()"},
    {"trigger":"error","contents":"error(${1:sprintf_format f}, ${2:sprintf_args ... args})"},
    {"trigger":"exece","contents":"exece(${1:string file}, ${2:array(string) args}${3:, void|mapping(string:string) env})"},
    {"trigger":"exit","contents":"exit(${1:int returncode}${2:, void|string fmt}${3:, mixed ... extra})"},
    {"trigger":"exp","contents":"exp(${1:float|int f})"},
    {"trigger":"explode_path","contents":"explode_path(${1:string p})"},
    {"trigger":"final","contents":"final ${1}"},
    {"trigger":"floatp","contents":"floatp(${1:mixed arg})"},
    {"trigger":"functionp","contents":"functionp(${1:mixed arg})"},
    {"trigger":"ifconstant","contents":"#if constant(${1:WHAT})\n  ${2:// Code}\n#endif"},
    {"trigger":"ifdef","contents":"#ifdef ${1:WHAT}\n  ${2:// Code}\n#endif"},
    {"trigger":"intp","contents":"intp(${1:mixed arg})"},
    {"trigger":"local","contents":"local ${1}"},
    {"trigger":"m_delete","contents":"m_delete(${1:mapping}, ${2:mixed key})"},
    {"trigger":"mappingp","contents":"mappingp(${1:mixed arg})"},
    {"trigger":"object_program","contents":"object_program(${1:this})"},
    {"trigger":"objectp","contents":"objectp(${1:mixed arg})"},
    {"trigger":"optional","contents":"optional ${1}"},
    {"trigger":"private","contents":"private ${1}"},
    {"trigger":"protected","contents":"protected ${1}"},
    {"trigger":"public","contents":"public ${1}"},
    {"trigger":"replace","contents":"replace(${1:string data}, ${2:string from}, ${3:string to})"},
    {"trigger":"search","contents":"search(${1:mixed haystack}, ${2:mixed needle}${3:, mixed|void start})"},
    {"trigger":"sprintf","contents":"sprintf(\"$1:format\", ${2:mixed arg})"},
    {"trigger":"sscanf","contents":"sscanf(${1:string data}, ${2:string format}, ${3:mixed ... lvalues})"},
    {"trigger":"static","contents":"static ${1}"},
    {"trigger":"string_to_utf8","contents":"string_to_utf8(${1:string str})"},
    {"trigger":"stringp","contents":"stringp(${1:mixed arg})"},
    {"trigger":"this_program","contents":"this_program"},
    {"trigger":"utf8_to_string","contents":"utf8_to_string(${1:string str})"},
    {"trigger":"werror","contents":"werror(\"${1:format}\\n\", ${2:mixed ... args});"},
    {"trigger":"write","contents":"write(\"${1:format}\\n\", ${2:mixed ... args});"}
  ]
}